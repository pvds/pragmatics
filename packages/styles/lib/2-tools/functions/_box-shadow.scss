/*  ==========================================================================
    Box shadow
    ========================================================================== */

/**
 * Convert shadow level and direction to box-shadow values
 * example:
 *    $shadow-value: shadow-values(4, left);
 */
@function shadow-values($level, $direction: bottom) {
  $cross-offset: nth($level, 1) + px;
  $main-offset: nth($level, 2) + px;
  $blur: nth($level, 3) + px;
  $spread: nth($level, 4) + px;

  $h-offset: $cross-offset;
  $v-offset: $main-offset;

  @if $direction == top {
    $h-offset: $cross-offset;
    $v-offset: -$main-offset;
  }

  @if $direction == right {
    $h-offset: $main-offset;
    $v-offset: $cross-offset;
  }

  @if $direction == left {
    $h-offset: -$main-offset;
    $v-offset: $cross-offset;
  }

  @return #{$h-offset $v-offset $blur $spread};
}

/**
 * Box shadow
 * example:
 *    box-shadow: shadow(4, left, $shadow-color: black);
 */
@function shadow(
  $level,
  $direction: bottom,
  $focus: false,
  $opacity-boost: $shadow-opacity-boost,
  $shadow-color: $color-shadow,
  $important: null
) {
  $focus-shadow: if($focus, $shadow-focus, null);
  $shadows: if($focus-shadow, (#{$focus-shadow}), null);
  $important: if($important, !important, null);

  @each $key, $shadow in $shadow-map {
    $shadow-raw: nth($shadow, 1);
    $shadow-keys-raw: map-keys($shadow-raw);
    $first-level: nth($shadow-keys-raw, 1);
    $last-level: nth($shadow-keys-raw, length($shadow-keys-raw));

    @if (type-of($level) != number or not unitless($level)) or
      ($level < $first-level or $level > $last-level)
    {
      @error '$level must be a unitless number between #{$first-level} and #{$last-level}, but received "#{$level}"';
    }

    $shadow-values: shadow-values(map-get($shadow-raw, $level), $direction);
    $shadow-color: rgba($shadow-color, nth($shadow, 2) * $opacity-boost);
    $current-shadow: (#{$shadow-values $shadow-color});

    /* Do not join an empty list because libsass adds a trailing comma (see: https://github.com/sass/libsass/issues/2471) */
    $shadows: if($shadows, join($shadows, $current-shadow, comma), $current-shadow);
  }

  @return $shadows $important;
}
